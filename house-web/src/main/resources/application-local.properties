#################local env###############################################################
spring.datasource.druid.url=jdbc:mysql://111.231.203.94:3306/houses?useUnicode=true&characterEncoding=utf-8
spring.datasource.druid.username=root_boss
spring.datasource.druid.password=root1qaz2wsx3edc
#com.mysql.cj.jdbc.Driver
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.initial-size=5
spring.datasource.druid.minIdle=1
spring.datasource.druid.maxActive=50
spring.datasource.druid.maxWait=10000
#解决mysql 8小时的问题
spring.datasource.druid.validationQuery=SELECT 'x'
#空闲连接检查时间间隔
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
#空闲连接最小空闲时间
spring.datasource.druid.minEvictableIdleTimeMillis=300000


# Redis settings
spring.redis.database=0
spring.redis.host=111.231.203.94
spring.redis.port=6379
spring.redis.password=redis_6379
spring.redis.ssl=false
#客户端超时时间单位是毫秒 默认是2000
spring.redis.connTimeout=10000
spring.redis.CachingTime=900
#spring.redis.url=spring.redis://spring.redis_6379@111.231.203.94:6379/2
#最大空闲数
spring.redis.maxIdle=30
#最小空闲数
spring.redis.minIdle=10
#连接池的最大数据库连接数。设为0表示无限制,如果是jedis 2.4以后用spring.redis.maxTotal
spring.redis.maxActive=200
spring.redis.maxWait=5
#控制一个pool可分配多少个jedis实例,用来替换上面的spring.redis.maxActive,如果是jedis 2.4以后用该属性
spring.redis.maxTotal=1000
#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
spring.redis.maxWaitMillis=3000
#连接的最小空闲时间 默认1800000毫秒(30分钟)
spring.redis.minEvictableIdleTimeMillis=300000
#每次释放连接的最大数目,默认3
spring.redis.numTestsPerEvictionRun=1024
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
spring.redis.timeBetweenEvictionRunsMillis=30000
#是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
spring.redis.testOnBorrow=true
#返回性校验
spring.redis.testOnReturn=true
#在空闲时检查有效性, 默认false
spring.redis.testWhileIdle=true

#配置静态资源路径
#/**表示访问时直接用【/relative_path】即可
file.path=/Users/qxr4383/Documents/work/myself/code/infos-SpringBoot/house-project/images

spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,\
classpath:/static/,classpath:/public/,file:${file.path}


file.prefix=http://127.0.0.1:8099
domain.name=http://127.0.0.1:8099
file.agency.prefix=http://127.0.0.1:8099